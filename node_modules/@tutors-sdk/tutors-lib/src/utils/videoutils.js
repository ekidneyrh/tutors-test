"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs = __importStar(require("fs"));
function readVideoIds() {
    let videos = {
        videoid: '',
        videoIds: [],
    };
    if (fs.existsSync('videoid')) {
        const entries = fs.readFileSync('videoid').toString().split('\n');
        entries.forEach((entry) => {
            if (entry !== '') {
                if (entry.includes('=')) {
                    videos.videoIds.push(parseProperty(entry));
                }
                else {
                    videos.videoid = entry;
                    videos.videoIds.push({ service: 'youtube', id: entry });
                }
            }
        });
    }
    if (videos.videoIds.length > 0) {
        videos.videoid = videos.videoIds[videos.videoIds.length - 1].id;
    }
    return videos;
}
exports.readVideoIds = readVideoIds;
function parseProperty(nv) {
    const nameValue = nv.split('=');
    nameValue[0] = nameValue[0].replace('\r', '');
    nameValue[1] = nameValue[1].replace('\r', '');
    return { service: nameValue[0], id: nameValue[1] };
}
//# sourceMappingURL=videoutils.js.map